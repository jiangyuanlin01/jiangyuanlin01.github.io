<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[python]]></title>
    <url>%2F2018%2F12%2F11%2F%E6%8F%92%E5%85%A5%E6%95%B0%E6%8D%AE%2F</url>
    <content type="text"><![CDATA[@[TOC](插入数据1234567891011121314151617import pymysqlid = '20120001'user = 'Bob'age = 20db = pymysql.connect(host='homehost', user='root', password='123456', port=3306, db='spiders')#连接数据库cursor = db.cursor()#获取操作游标sql = 'insert into students(id,name,age) values(%s,%s,%s)'try: cursor.execute(sql, (id, user, age))#以元组形式传入参数 db.commit() #提交数据到数据库# 异常处理except: db.rollback() #数据回滚db.close() #关闭数据库]]></content>
  </entry>
  <entry>
    <title><![CDATA[python]]></title>
    <url>%2F2018%2F12%2F11%2F%E5%BB%BA%E7%AB%8B%E6%95%B0%E6%8D%AE%E8%A1%A8%2F</url>
    <content type="text"><![CDATA[@[TOC](建立数据表123456789import pymysqldb = pymysql.connect(host='homehost', user='root', password='123456', port=3306, db='spiders')#连接远程mysql服务器cursor = db.cursor() #获取操作游标sql = 'create table if not exists students (id varchar(255) not null, name varchar(255) not null, age int(20) not null, primary key (id))'#建数据表的mysql语句cursor.execute(sql)#execute语句执行SQL语句db.close() #关闭数据库]]></content>
  </entry>
  <entry>
    <title><![CDATA[python]]></title>
    <url>%2F2018%2F12%2F11%2F%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93%2F</url>
    <content type="text"><![CDATA[@[TOC](数据库的连接1234567891011import pymysqldb = pymysql.connect(host='homehost', user='root', password='123456', port=3306, db='spiders')#连接远程mysql服务器cursor = db.cursor() #获取操作游标cursor.execute('select version()') #利用execute（）方法执行SQL语句，动态创建和执行SQL语句data = cursor.fetchone() #利用fetchone（）方法获取一条数据print('database version:', data)#获取mysql版本号cursor.execute("create database spiders default character set utf8")#创建数据库spiders，将该库的默认编码格式设置为utf8格式db.close() #关闭数据库连接]]></content>
  </entry>
  <entry>
    <title><![CDATA[Mysql]]></title>
    <url>%2F2018%2F12%2F08%2Fmysql%20%E5%85%B6%E4%BB%96%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C%2F</url>
    <content type="text"><![CDATA[@[TOC](linux系统下Mysql其他基本操作1234567891011121314151617181920212223242526272829git clone https://github.com/shiyanlou/SQL6 #复制代码sudo server mysql startmysql -u root -psource /root /SQL6/MySQL-06.sql索引：建立索引加快查询速度语法：Alter table 表名字 add index 索引名（列名）;Create index 索引名 on 表名（列名）;例：Alter table employee add index idx_id (id);#在employee表中的id列上建立索引名为idx_id的索引Create index idx_name on employee (name);查看建的索引： show index from 表名字;视图：视图是从一个或多个表中导出来的表，是一种虚拟存在的表。Create view 视图名 (列a,列b,列c) as select 列1,列2,列3 from 表名字;Create view v_emp (v_name,v_age,v_phone) as select name,age,phone from employee;导入：Load data infile ‘/var/lib/mysql-files/SQL6/in.txt’ into table employee;#将路径下的文件导入employee表中导出：Select * into outfile ‘/var/lib/mysql-files/out.txt’ from employee;#将employee表中的所有数据按如下路径导出备份Mysqldump -u root -p 数据库名&gt;备份文件名; #备份整个数据库Mysqldump -u root -p 数据库名 表名&gt;备份文件名; #备份整个表例：mysqldump -u root -p mysql_shiyan &gt; bak.sql;#将数据库mysql_shiyan备份成文件bak.sql恢复Mysql -u root -p test &lt; bak.sql; #将之前备份的文件恢复到test数据库中]]></content>
  </entry>
  <entry>
    <title><![CDATA[Mysql]]></title>
    <url>%2F2018%2F12%2F08%2Fmysql%20%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8F%8A%E8%A1%A8%E7%9A%84%E4%BF%AE%E6%94%B9%E5%92%8C%E5%88%A0%E9%99%A4%2F</url>
    <content type="text"><![CDATA[@[TOC](linux系统下mysql 数据库及表的修改和删除123456789101112131415161718192021222324252627282930313233343536373839git clone https://github.com/shiyanlou/SQL5.git #代码下载sudo service mysql start #开启服务mysql -u root -p #进入mysqlsource /home/shiyanlou/Desktop/SQL5/MySQL-05.sql对数据库的修改Show databases;Drop database test_01; #删除数据库test_01对一张表的修改重命名一张表Rename table 原名 to 新名字；Alter table 原名 rename 新名字;Alter table 原名 rename to 新名字；例：Rename table table_1 to table_2; #将数据表table_1改名为table_2删除一张表Drop table 表名字;例：drop table table_2;增加一列Alter table 表名字 add 列名字 数据类型 约束；例：alter table employee add height int(10) default 170;# 在表employee中的尾端添加一列heightAlter table employee add weight int(4) default 120 after age;# 在表employee中age列的后面添加一个weight列Alter table employee add test int(10) default 11 first;# 在employee表中第一列添加一个test列；删除一列Alter table 表名字 drop 列名字;例：alter table employee drop test;重命名一列Alter table 表名字 change 原列名 新列名 数据类型 约束;(数据类型不能省略，否则会重命名失败)例：Alter table employee change height shengao int(4) default 170;改变数据类型Alter table 表名字 modify 列名字 新数据类型；对表的内容修改Update 表名字 set 列1=值1,列2=值2 where 条件;删除表中的一条数据Delete from 表名字 where 条件；]]></content>
  </entry>
  <entry>
    <title><![CDATA[Mysql]]></title>
    <url>%2F2018%2F12%2F08%2FMysql%20select%E8%AF%AD%E5%8F%A5%E8%AF%A6%E8%A7%A3%2F</url>
    <content type="text"><![CDATA[@[TOC](linux系统下mysql select语句详解1234567891011121314151617181920212223242526272829303132333435363738394041424344git clone https://github.com/shiyanlou/SQL4.git #下载代码sudo service mysql start #开启mysql服务mysql -u root -p #进入mysqlsource /root/SQL4/MySQL-04-01.sql #恢复刚刚下载的文件source /root/SQL4/MySQL-04-02.sql select语句的基本格式select 要查询的列名 from 表名 where 约束条件例： select name,age from employee where age&gt;22;Select name,age,phone from employee where name =’Mary’;And(且)与or(或)Select name,age from employee where age&lt;25 or age&gt;30;#在employee表中查找age大于30或小于25的人的name和ageSelect name,age from employee where age&gt;25 and age&lt;30;#在employee表中查找age大于25小于30的人的name和ageIn 和not inSelect name,age,phone,in_dpt from employee where in_dpt in (‘dpt3’,’dpt4’);#在employee表中查找dpt3和dpt4的name,age phoneSelect name,age,phone,in_dpt from employee where in_dpt not in (‘dpt3’,’dpt4’);#在employee表中查找不是dpt3和dpt4的name,age phone通配符：_代表一个未指定字符，%代表不定个未指定字符Select name,age,phone from employee where phone like ‘1101__’;#查找1101开头的6位数号码的name，age，phoneSelect name,age,phone from employee where name like ‘J%’;#查找首字母为J的人的name,age,phone对结果排序:order by和desc升序排列，asc降序排列Select name,age,salary,phone from employee order by salary desc;#按salary降序排列Select name,age,salary,phone from employee order by salary asc;#按salary升序排列SQL内置函数计算Count 计数 sum 求和 avg求平均值 max 最大值 min 最小值Select max(salary) as max_salary,min(salary) from employee;#在employee表中查找salary的最大值，最小值，最大值重命名为max_salary子查询Select of_dpt,count(proj_name) as count_project from project group by of_dpt having of_dpt in (select in_dpt from employee where name=’Tom’;#查找姓名为‘Tom’所在的部门做的工程数连接查询Select name,id,people_num from employee,department where employee.in_dpt=department.dpt_name order by id;#查询各员工所在部门的人数Join on 语法Select id,name,people_num from employee join department on employee.in_dpt=department.dpt_name order by id;]]></content>
      <categories>
        <category>Mysql</category>
      </categories>
      <tags>
        <tag>Mysql</tag>
        <tag>select</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Mysql]]></title>
    <url>%2F2018%2F12%2F08%2FSQL%E7%9A%84%E7%BA%A6%E6%9D%9F%2F</url>
    <content type="text"><![CDATA[@[TOC](linux系统下SQL的约束123456789101112131415161718192021git clone https://github.com/shiyanlou/SQL3.git#用git命令下载数据文件source /home/shiyanlou/Desktop/SQL3/MySQL-03-01.sql;#恢复下载的数据文件Create table employee(id int(10) primary key, name char(20));主键的定义 Create table employee(id int(10) primary key, name char(20));另一种定义主键的方式Constraint dpt_pk primary key(dpt_name);复合主键Constraint proj_pk primary key(proj_name,proj_num);默认值约束People_num int(10) default ‘10’ #people_num有default约束，默认值为10，如果people_num的输入值为空，默认输入10唯一约束：规定一张表中一列的值不能有重复值Create table employee(id int(10),phone int(20) unique)#规定插入过程中phone的值不能有重复，数据重复是会插入失败。非空约束：被非空约束的列，插入是值必须为非空Create table employee(id int (10),salary int(20) not null)#salary被not null约束，插入数据时salary的值不能为空。外键约束：外键能确保数据的完整性，也可以体现表与表之间的关系Constraint emp_fk foreign key(in_dpt)reference department(dpt_name)#in_dpt定义为外键，参考列为department表的dpt_name列]]></content>
  </entry>
  <entry>
    <title><![CDATA[Mysql]]></title>
    <url>%2F2018%2F12%2F04%2Fmysql%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE%E5%BA%93%E5%B9%B6%E6%8F%92%E5%85%A5%E6%95%B0%E6%8D%AE%2F</url>
    <content type="text"><![CDATA[@[TOC](linux系统下mysql创建数据库并插入数据的命令行12345678910Create database mysql_shiyan; #创建数据库mysql_shiyan Use mysql_shiyan; #连接数据库mysql_shiyanCreate table employee (id int(10),name char(20),phone int(10));#新建一张数据表employee,其中包含Id，name，phone三个参数Insert into employee(id,name,phone) values(01,'Tom',110110110);Insert into employee values (02,'Jack',119119119);Insert into employee(id,name) values (03,'Rose');#向数据表employee中插入数据Select * from employee; #查看employee表中是否插入数据]]></content>
  </entry>
  <entry>
    <title><![CDATA[Mysql]]></title>
    <url>%2F2018%2F12%2F04%2Fmysql%E7%9A%84%E5%AE%89%E8%A3%85%E5%8F%8A%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C%2F</url>
    <content type="text"><![CDATA[@[TOC](linux系统下mysql的安装及基本操作123456789Sudo service mysql start #打开mysql服务Sudo apt-get install mysql-server #安装mysql服务端，核心程序Sudo apt-get install mysql-client #安装mysql客户端sudo netstat -tap | grep mysql #验证是否安装和启动成功mysql -u root -p #进入mysqlshow databases; #查看数据库use mysql_shiyan1; #连接mysql_shiayan1数据库show tables; #查看表quit;或exit; #退出mysql]]></content>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F12%2F01%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
